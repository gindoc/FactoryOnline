apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.online.factory.factoryonline"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        // your debug keystore
        debug{
            storeFile file("debug.keystore")
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'

        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    compile "com.google.guava:guava:$rootProject.guavaVersion"

    // Add Dagger dependencies
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    apt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    //RxLifeCycle
    compile "com.trello:rxlifecycle:$rootProject.rxLifeCycleVersion"
    // If you want to bind to Android-specific lifecycles
    compile "com.trello:rxlifecycle-android:$rootProject.rxLifeCycleVersion"
    // If you want pre-written Activities and Fragments you can subclass as providers
    compile "com.trello:rxlifecycle-components:$rootProject.rxLifeCycleVersion"
    compile "io.reactivex:rxjava:$rootProject.rxjavaVersion"
    compile "io.reactivex:rxandroid:$rootProject.rxandroidVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    //    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0-RC2'
    compile "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    compile 'com.squareup.okio:okio:1.10.0'
    apt "com.bluelinelabs:logansquare-compiler:$rootProject.logansquareVersion"
    compile "com.bluelinelabs:logansquare:$rootProject.logansquareVersion"
    compile "com.squareup.picasso:picasso:$rootProject.picassoVersion"
    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"
    compile 'com.google.android:flexbox:0.2.3'
    compile 'me.yokeyword:fragmentation:0.7.12'
    compile 'com.github.aurae.retrofit2:converter-logansquare:1.4.1'
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
//    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

    testCompile "junit:junit:$rootProject.junitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testCompile('org.robolectric:robolectric:3.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
}
